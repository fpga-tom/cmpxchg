cmake_minimum_required(VERSION 3.12)
project(cmpxchg)

set(CMAKE_CXX_STANDARD 14)

FIND_PACKAGE(PythonInterp)
FIND_PACKAGE(Boost COMPONENTS system iostreams filesystem)
FIND_PACKAGE(PkgConfig REQUIRED)
#FIND_PACKAGE(GTK3)
PKG_CHECK_MODULES(GTK3 REQUIRED gtk+-3.0 gtkmm-3.0)

find_package(wxWidgets COMPONENTS gl core propgrid adv base REQUIRED)
set(wxWidgets_CONFIGURATION mswu)
include(${wxWidgets_USE_FILE})

#if (PYTHONINTERP_FOUND)
#    if (UNIX AND NOT APPLE)
#        if (PYTHON_VERSION_MAJOR EQUAL 3)
#            FIND_PACKAGE(Boost COMPONENTS python${PYTHON_VERSION_SUFFIX})
#            FIND_PACKAGE(PythonInterp 3)
#            FIND_PACKAGE(PythonLibs 3 REQUIRED)
#        else()
#            FIND_PACKAGE(Boost COMPONENTS python)
#            FIND_PACKAGE(PythonInterp)
#            FIND_PACKAGE(PythonLibs REQUIRED)
#        endif()
#    else()
#        if (PYTHON_VERSION_MAJOR EQUAL 3)
#            FIND_PACKAGE(Boost COMPONENTS python${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR})
#            FIND_PACKAGE(PythonInterp 3)
#            FIND_PACKAGE(PythonLibs 3 REQUIRED)
#        else()
#            FIND_PACKAGE(Boost COMPONENTS python${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR})
#            FIND_PACKAGE(PythonInterp)
#            FIND_PACKAGE(PythonLibs REQUIRED)
#        endif()
#    endif()
#else()
#    message("Python not found")
#endif()

INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS} ${PYTHON_INCLUDE_DIRS} ${GTK3_INCLUDE_DIRS})

add_executable(cmpxchg main.cpp Signal.cpp Signal.h Task.cpp Task.h Module.cpp Module.h Sync.cpp Sync.h Slot.cpp Slot.h Port.cpp Port.h Rx.cpp Rx.h RxBuilder.cpp RxBuilder.h DummySink.cpp DummySink.h Waterfall.cpp Waterfall.h FmDemod.cpp FmDemod.h PaAudio.cpp PaAudio.h Sniff.cpp Sniff.h FFT.cpp FFT.h SDLSink.cpp SDLSink.h Timer.cpp Timer.h Spectrogram.cpp Spectrogram.h GnuplotSink.cpp GnuplotSink.h gnuplot_i.hpp gui/MainWin.cpp gui/MainWin.h gui/PlotArea.cpp gui/PlotArea.h GtkSink.cpp GtkSink.h FMrx.cpp FMrx.h Tuner.h Nco.cpp Nco.h GSMrx.cpp GSMrx.h GsmDemod.cpp GsmDemod.h gui/FFTPlot.cpp gui/FFTPlot.h gui/WaterfallPlot.cpp gui/WaterfallPlot.h)
target_link_libraries(cmpxchg pthread iio liquid pulse pulse-simple SDL fftw3f ${Boost_LIBRARIES} ${PYTHON_LIBRARIES} ${wxWidgets_LIBRARIES} ${OPENGL_LIBRARIES} ${GTK3_LIBRARIES})